{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/Components/Tabs/Tabs.svelte","../../src/Components/Tabs/TabList.svelte","../../src/Components/Tabs/TabPanel.svelte","../../src/Components/Tabs/Tab.svelte","../../src/color.ts","../../src/stores.ts","../../src/Category.svelte","../../node_modules/@bulatdashiev/svelte-slider/src/slider.js","../../node_modules/@bulatdashiev/svelte-slider/src/Thumb.svelte","../../node_modules/@bulatdashiev/svelte-slider/src/Slider.svelte","../../src/ColorSelector.svelte","../../src/Hour.svelte","../../src/Minute.svelte","../../src/accum.ts","../../src/stat.ts","../../src/HourStat.svelte","../../src/DayStat.svelte","../../src/EventList.svelte","../../src/Components/LogoutComponent.svelte","../../src/Main.svelte","../../src/Components/LoginComponent.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\n\texport const TABS = {};\n</script>\n\n<script>\n\timport { setContext, onDestroy } from 'svelte';\n\timport { writable } from 'svelte/store';\n\n\tconst tabs = [];\n\tconst panels = [];\n\tconst selectedTab = writable(null);\n\tconst selectedPanel = writable(null);\n\n\tsetContext(TABS, {\n\t\tregisterTab: tab => {\n\t\t\ttabs.push(tab);\n\t\t\tselectedTab.update(current => current || tab);\n\t\t\t\n\t\t\tonDestroy(() => {\n\t\t\t\tconst i = tabs.indexOf(tab);\n\t\t\t\ttabs.splice(i, 1);\n\t\t\t\tselectedTab.update(current => current === tab ? (tabs[i] || tabs[tabs.length - 1]) : current);\n\t\t\t});\n\t\t},\n\n\t\tregisterPanel: panel => {\n\t\t\tpanels.push(panel);\n\t\t\tselectedPanel.update(current => current || panel);\n\t\t\t\n\t\t\tonDestroy(() => {\n\t\t\t\tconst i = panels.indexOf(panel);\n\t\t\t\tpanels.splice(i, 1);\n\t\t\t\tselectedPanel.update(current => current === panel ? (panels[i] || panels[panels.length - 1]) : current);\n\t\t\t});\n\t\t},\n\n\t\tselectTab: tab => {\n\t\t\tconst i = tabs.indexOf(tab);\n\t\t\tselectedTab.set(tab);\n\t\t\tselectedPanel.set(panels[i]);\n\t\t},\n\n\t\tselectedTab,\n\t\tselectedPanel\n\t});\n</script>\n\n<div class=\"tabs\">\n\t<slot></slot>\n</div>","<div class=\"tab-list\">\n\t<slot></slot>\n</div>\n\n<style>\n\t.tab-list {\n\t\tborder-bottom: 1px solid teal;\n\t}\n</style>","<script>\n\timport { getContext } from 'svelte';\n\timport { TABS } from './Tabs.svelte';\n\n\tconst panel = {};\n\tconst { registerPanel, selectedPanel } = getContext(TABS);\n\n\tregisterPanel(panel);\n</script>\n\n{#if $selectedPanel === panel}\n\t<slot></slot>\n{/if}\n","<script>\n\timport { getContext } from 'svelte';\n\timport { TABS } from './Tabs.svelte';\n\n\tconst tab = {};\n\tconst { registerTab, selectTab, selectedTab } = getContext(TABS);\n\n\tregisterTab(tab);\n</script>\n\n<style>\n\tbutton {\n\t\tborder-bottom: 3px solid #5ab4bd;\n\t\tfont-size: 16px;\n\t\theight: 40px;\n\t\twidth: 100px;\n\t\tcolor: #565656;\n\t\tbackground-color: #d9d9d9;\n\t\ttransition: all 0.2s ease;\n\n\t\t/* background: none; */\n\t\tborder: none;\n\t\t/* border-bottom: 2px solid white; */\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\tpadding: 5px;\n\t\t/* color: #ccc; */\n\t}\n\t\n\t.selected {\n\t\t/* border-bottom: 2px solid teal;\n\t\tcolor: #333; */\n\t\tbackground-color: #5ab4bd;\n\t    color: #fff;\n\t}\n\tbutton:hover {\n\t\topacity: 0.75;\n\t}\n</style>\n\n<button class:selected=\"{$selectedTab === tab}\" on:click=\"{() => selectTab(tab)}\">\n\t<slot></slot>\n</button>","import { writable, get } from 'svelte/store';\nexport const palettes = writable([])\nexport const huerange = writable([0,54])\n\nexport function hslToHex(h, s, l) {\n    l /= 100;\n    const a = s * Math.min(l, 1 - l) / 100;\n    const f = n => {\n        const k = (n + h / 30) % 12;\n        const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n        return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\n    };\n    return `#${f(0)}${f(8)}${f(4)}`;\n}\n\nfunction palette(n){\n    if ( n < 0 ){\n        return \"#ccc\"\n    }\n    let ra = get(huerange)\n    let hue = (ra[0] + n*(ra[1]-ra[0])) % 360\n    let s=30\n    let v=50\n    return hslToHex(hue, s, v)\n}\n\nhuerange.subscribe(values=>{\n    let pals = []\n    for(let i=0; i<50; i++){\n        pals = [...pals, palette(i)]\n    }\n    palettes.set(pals)\n})\n\n\n\n","import { writable, get } from 'svelte/store';\n\nconst date = new Date()\nexport const hour = writable(date.getHours());\nexport const minute = writable(date.getMinutes());\nexport const history = writable([])\nexport const cats = writable({})\n// for debug\nexport const token = writable(\"\")\n\nexport const status = writable(\"Offline\")\n\nconst BASEURL = 'http://www.chem.okayama-u.ac.jp:8088'\n// const BASEURL = \"https://timeaccount-test-app.herokuapp.com\"\n\nexport async function getToken (username, password) {\n    /* parameters:\n       username and password\n\n       then find the user id\n       and make a new token\n\n       returns:\n       token\n       */\n     \n\n    const body_ = JSON.stringify({\n        \"un\": username,\n        \"pw\": password\n    })\n\n    const res = await fetch(BASEURL+'/v0/auth/', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n          },\n        body: body_\n    })\n    \n    // もし不成功なら空文字列を返す。\n    if ( res.status != 200 ){\n        return \"\"\n    }\n\n    let result = await res.json()\n    // console.log(\"RESULT:\"+result)\n    if ( result != \"\" ){\n        token.set(result)\n        return result\n    }\n    return \"\";\n}\n\n\n\nexport async function storeAction (endtime, duration, category, action) {\n    /*\n        parameters:\n        endtime: unixtime?\n        duration: in minutes\n        category: integer\n        action: string\n\n        store an action record to the server\n    */\n    status.set( \"Updating\" )\n\n    const body_ = JSON.stringify({\n        token: get(token),\n        endtime: endtime,\n        duration: duration,\n        category: category,\n        action: action\n    })\n\n    const controller = new AbortController()\n\n    // 5 second timeout:\n    const timeoutId = setTimeout(() => controller.abort(), 5000)\n\n    const res = await fetch(BASEURL+'/v0/', {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n          },\n        body: body_,\n        signal: controller.signal // 5 sec\n    }).catch(()=>{status.set(\"Offline\")})\n      \n    if ( (typeof res === 'undefined') || (res.status != 200) ){\n        status.set(\"Uncertain\")\n        return\n    }\n    status.set( \"\" )\n}\n\n\nexport async function getHistory () {\n    /*\n        get the history of actions in descend time order\n\n        store the history and category data (button list)\n\n        This is called every one minute in Main.svelte\n     */\n\n    const body_ = JSON.stringify({\n        \"token\": get(token)\n    })\n\n    const controller = new AbortController()\n\n    // 5 second timeout:\n    const timeoutId = setTimeout(() => controller.abort(), 5000)\n\n    const duration = \"10080\" // 10080 minutes == 1 week\n    const res = await fetch(BASEURL+'/v0/query/'+duration, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n          },\n        body: body_,\n        signal: controller.signal // 5 sec\n    }).catch(()=>{status.set(\"Offline\")})\n      \n    if ( (typeof res === 'undefined') || (res.status != 200) ){\n        status.set(\"Uncertain\")\n        return\n    }\n    status.set( \"\" )\n\n    res.json().then(result=>{\n        let remote_history = JSON.parse(result)\n        if ( remote_history.length > 0 ){\n            const remotelast = remote_history[0][1]\n            minute.set(Math.floor(remotelast % 60))\n            hour.set(Math.floor(remotelast / 60 + 9) % 24)\n        }\n\n        // もし、読みこんだhistoryの最終データが、クライアント上の最終データと同じ時刻であれば、\n        // historyもcatsも更新しない。\n        // 更新してしまうと、クライアント側で再表示が必要になる。\n\n        const l = get(history)\n        if ( l.length > 0 ){\n            // 手許の最終actionの時刻\n            const locallast = Math.floor(l[0][1])\n            // サーバ上の最終actionの時刻\n            const remotelast = remote_history[0][1]\n            // もし履歴の最新と、こちらの履歴の最新の時刻が一致するなら\n            if ( locallast == remotelast ){\n                return\n            }\n        }\n\n        let categories = {}\n        for (let r in remote_history){\n            let row = remote_history[r]\n            // 0 user_id, 1 endtime, 2 duration, 3 category, 4 action, 5 hours, 6 minutes\n\n            // svelteでの表示が楽になるように、時と分を準備する。\n            const minutes = Math.floor(row[1] % 60)\n            const hours   = Math.floor(row[1] / 60 + 9) % 24\n            row.push(hours)\n            row.push(minutes)\n\n            // categoryを再構成\n            const cat = row[3]\n            const endtime = row[1]\n            const action = row[4]\n\n            if ( ! (cat in categories) ){\n                categories[cat] = {}\n            }\n            if ( ! (action in categories[cat]) ){\n                // 一番新しいものだけを追加する。\n                categories[cat][action] = endtime\n            }\n        }\n        // writableを更新する。\n        history.set(remote_history)\n        cats.set(categories)\n    })\n    return\n}\n","<script lang=\"ts\">\n    import { palettes } from './color';\n    import { hour, minute, history, storeAction, cats } from './stores'\n    // Categoryとは、テキスト入力枠とボタンのセットである。\n    export let id;\n\n    // export let whatUdid;\n    let buttons\n    let sorted\n\n    cats.subscribe( value=> {\n        if ( Object.keys(value).length > 0 ){\n            buttons = value[id]\n            sorted = Object.keys(buttons).sort((a,b)=>buttons[b] - buttons[a])\n        }\n    })\n\n    let inputtext;\n\n    function update(action){\n        // 現在時刻\n        const date = new Date()\n        const now = date.getTime() / 1000 / 60 // in minute\n        const h = date.getHours()\n        const m = date.getMinutes()\n        // 開始時刻との差\n        const delta = (h-$hour+24)%24*60+(m-$minute)\n        // 1分以上なら\n        if ( delta > 0 ){\n            // 履歴に記録する\n            history.update(v => [[0,now,delta,id,action,h,m], ...v])\n            // historyを更新することで、自動的にボタンが更新される、はず。\n            storeAction(now, delta, id, action)\n\n        }\n        // 最新版では、サーバと矛盾がない限りreloadしないので、ボタンを強制的に追加する。\n        // ボタンを作成または更新\n        buttons[action] = now\n        // sort and pick 6 newest items\n        sorted = Object.keys(buttons).sort((a,b)=>buttons[b] - buttons[a]) //.slice(0,6)\n        // re-make buttons\n        let newbuttons = {}\n        sorted.forEach(element => {\n            newbuttons[element] = buttons[element]\n        });\n        buttons = newbuttons\n\n        // 最終操作時刻を更新\n        hour.set(h)\n        minute.set(m)\n    }\n\n\n    function onKeyDown (e) {\n        if (e.key == \"Enter\"){\n            update(inputtext)\n        }\n        // inputtext = \"\"\n    }\n    function onClick (e) {\n        update(e.target.innerText)\n    }\n\n\n    // ヒストリーを読みこんで、ボタンを再配置する機能が欲しい。\n</script>\n\n<p style:background-color={$palettes[id]} >\n    <input bind:value={inputtext} placeholder=\"What did you do til now?\" on:keydown={onKeyDown} />\n    {#each sorted as name, i}\n    <button on:click={onClick} >{name}</button>\n    {/each}\n</p>\n\n<style>\n    p {\n        margin: 0;\n        padding: 2px;\n    }\n    button {\n        margin: 0;\n        background-color: #0000;\n        color: white;\n    }\n    input {\n        margin: 0;\n        background-color: #0000;\n        color: white;\n    }\n</style>","export default function handle(node) {\r\n  const onDown = getOnDown(node);\r\n\r\n  node.addEventListener(\"touchstart\", onDown);\r\n  node.addEventListener(\"mousedown\", onDown);\r\n  return {\r\n    destroy() {\r\n      node.removeEventListener(\"touchstart\", onDown);\r\n      node.removeEventListener(\"mousedown\", onDown);\r\n    }\r\n  };\r\n}\r\n\r\nfunction getOnDown(node) {\r\n  const onMove = getOnMove(node);\r\n\r\n  return function (e) {\r\n    e.preventDefault();\r\n    node.dispatchEvent(new CustomEvent(\"dragstart\"));\r\n\r\n    const moveevent = \"touches\" in e ? \"touchmove\" : \"mousemove\";\r\n    const upevent = \"touches\" in e ? \"touchend\" : \"mouseup\";\r\n\r\n    document.addEventListener(moveevent, onMove);\r\n    document.addEventListener(upevent, onUp);\r\n\r\n    function onUp(e) {\r\n      e.stopPropagation();\r\n\r\n      document.removeEventListener(moveevent, onMove);\r\n      document.removeEventListener(upevent, onUp);\r\n\r\n      node.dispatchEvent(new CustomEvent(\"dragend\"));\r\n    };\r\n  };\r\n}\r\n\r\nfunction getOnMove(node) {\r\n  const track = node.parentNode;\r\n\r\n  return function (e) {\r\n    const { left, width } = track.getBoundingClientRect();\r\n    const clickOffset = \"touches\" in e ? e.touches[0].clientX : e.clientX;\r\n    const clickPos = Math.min(Math.max((clickOffset - left) / width, 0), 1) || 0;\r\n    node.dispatchEvent(new CustomEvent(\"drag\", { detail: clickPos }));\r\n  };\r\n}","<div\r\n  class=\"thumb\"\r\n  style={`left: ${pos * 100}%;`}\r\n  use:handle\r\n  on:dragstart={() => ((active = true), dispatch('active', true))}\r\n  on:drag={({ detail: v }) => (pos = v)}\r\n  on:dragend={() => ((active = false), dispatch('active', false))}>\r\n  <div class=\"thumb-content\" class:active>\r\n    <slot />\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import handle from \"./slider.js\";\r\n  const dispatch = createEventDispatcher();\r\n  let pos, active;\r\n  export { pos };\r\n</script>\r\n\r\n<style>\r\n  .thumb {\r\n    position: absolute;\r\n    top: 50%;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  .thumb-content {\r\n    position: relative;\r\n    width: fit-content;\r\n    height: fit-content;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  .thumb-content::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 200%;\r\n    height: 200%;\r\n    transform: translate(-25%, -25%) scale(0);\r\n    border-radius: 100vh;\r\n    background: var(--thumb-bg, #5784fd);\r\n    opacity: 30%;\r\n    transition: transform 100ms ease-in-out;\r\n  }\r\n\r\n  .thumb-content.active::before {\r\n    transform: translate(-25%, -25%) scale(1);\r\n  }\r\n</style>\r\n","<input type=\"number\" value={value[0]} name={name[0]} />\r\n{#if range}\r\n  <input type=\"number\" value={value[1]} name={name[1]} />\r\n{/if}\r\n<div class=\"track\">\r\n  <div\r\n    class=\"progress\"\r\n    style={progress} />\r\n  <Thumb bind:pos={pos[0]} on:active={({ detail: v }) => active = v}>\r\n    <slot name=\"left\">\r\n      <slot>\r\n        <div class=\"thumb\" />\r\n      </slot>\r\n    </slot>\r\n  </Thumb>\r\n  {#if range}\r\n    <Thumb bind:pos={pos[1]} on:active={({ detail: v }) => active = v}>\r\n      <slot name=\"right\">\r\n        <slot>\r\n          <div class=\"thumb\" />\r\n        </slot>\r\n      </slot>\r\n    </Thumb>\r\n  {/if}\r\n</div>\r\n\r\n<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import Thumb from \"./Thumb.svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let name = [];\r\n  let range = false;\r\n  let min = 0;\r\n  let max = 100;\r\n  let step = 1;\r\n  let value = [min, max];\r\n  let pos;\r\n  let active = false;\r\n  let order = false;\r\n\r\n  export { name, range, min, max, step, value, order };\r\n\r\n  $: if (active) setValue(pos);\r\n  $: if (!active) setPos(value);\r\n  $: if (range && order && active) pos = checkPos(pos);\r\n  $: min, max, clamp();\r\n  $: progress = `\r\n    left: ${range ? Math.min(pos[0], pos[1]) * 100 : 0}%;\r\n    right: ${100 - Math.max(pos[0], (range ? pos[1] : pos[0])) * 100}%;\r\n  `;\r\n\r\n  function setValue(pos) {\r\n    const offset = min % step;\r\n    const width = max - min\r\n    value = pos\r\n      .map(v => min + v * width)\r\n      .map(v => Math.round((v - offset) / step) * step + offset);\r\n    dispatch(\"input\", value);\r\n  }\r\n\r\n  function setPos(value) {\r\n    pos = value\r\n      .map(v => Math.min(Math.max(v, min), max))\r\n      .map(v => (v - min) / (max - min));\r\n  }\r\n\r\n  function checkPos(pos) {\r\n    return [Math.min(...pos), Math.max(...pos)];\r\n  }\r\n\r\n  function clamp() {\r\n    setPos(value);\r\n    setValue(pos);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    display: none;\r\n  }\r\n\r\n  .track {\r\n    margin: 16px 8px;\r\n    position: relative;\r\n    height: 4px;\r\n    width: calc(100% - 16px);\r\n    border-radius: 100vh;\r\n    background: var(--track-bg, #ebebeb);\r\n  }\r\n\r\n  .progress {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    border-radius: 100vh;\r\n    background: var(--progress-bg, #8abdff);\r\n  }\r\n\r\n  .thumb {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 100vh;\r\n    background: var(--thumb-bg, #5784fd);\r\n  }\r\n</style>\r\n","<script>\n\timport Slider from '@bulatdashiev/svelte-slider';\n\timport { huerange } from './color'\n\n\n\n</script>\n\nColor theme\n<Slider max=\"360\" step=\"10\" bind:value={$huerange} range order />\n","<script lang=\"ts\">\n    const items = [...Array(24).keys()];\n    import { hour } from './stores'\n\n    // let h\n    // hour.subscribe(value => {\n    //     h = value\n    // }\n\n</script>\n\n<select bind:value={$hour}>\n\t{#each items as value}<option {value}>{value}</option>{/each}\n</select>\n","<script lang=\"ts\">\n    const items = [...Array(60).keys()];\n    import { minute } from './stores'\n\n    // let selected = $minute\n    // $: {\n    //     selected = $minute\n    // }\n</script>\n\n<select bind:value={$minute}>\n\t{#each items as value}<option {value}>{value}</option>{/each}\n</select>\n","export function accum(tiles, index, category, minute){\n    if ( ! (index in tiles) ){\n        tiles[index] = {}\n    }\n    if ( ! (category in tiles[index])){\n        tiles[index][category] = 0\n    }\n    tiles[index][category] += minute\n}\n","import { accum } from './accum'\n\nexport function statistics(events, binw, oldest){\n    let tiles = {}\n\n    const JSTFIX = 9*60\n\n    const date = new Date()\n    const now = date.getTime() / 1000 / 60// in minute\n    const origin = now + JSTFIX\n\n    tiles = {}\n    // ひとつあとのイベントがはじまった時刻\n    let laststart = 0\n    // 時間をさかのぼる順序で\n    for ( let i=0; i<events.length; i++ ){\n        let event = events[i]\n        let endtime = event[1]\n        if ( oldest > endtime ){\n            break;\n        }\n        if ( laststart == 0 ){\n            laststart = endtime\n        }\n        let duration = event[2]\n        // 重なっている時は、新しい記録を信じ、古いほうを削る。\n        if ( laststart < endtime ){\n            duration -= (endtime - laststart)\n            endtime = laststart\n            if ( duration < 0 ){\n                continue\n            }\n        }\n        laststart = endtime - duration\n        const category = event[3]\n        const bin = Math.floor( (endtime + JSTFIX ) / binw )\n        let dbin = Math.floor( origin / binw ) - bin\n        let left = endtime + JSTFIX - bin*binw\n        while ( left < duration ){\n            accum(tiles, dbin, category, left)\n            duration -= left\n            dbin ++\n            left = binw\n        }\n        if ( duration > 0 ){\n            accum(tiles, dbin, category, duration)\n        }\n    }\n    for (let bin in tiles){\n        let sum = 0\n        for ( let cat in tiles[bin]){\n            sum += tiles[bin][cat]\n        }\n        const unaccounted = binw - sum\n        if ( unaccounted > 0){\n            tiles[bin][-1] = unaccounted\n        }\n    }\n    return tiles\n}","<script lang=\"ts\">\n    import { history } from './stores';\n    import { palettes } from './color';\n    import { statistics }   from './stat'\n\n    let tiles = {}\n    let hours = []\n\n\n    history.subscribe(events => {\n        const date = new Date()\n        const now = date.getTime() / 1000 / 60 // in minute\n        const h   = date.getHours()\n        tiles = statistics( events, 60, now - 60*24)\n\n        for (let i=0; i<24; i++){\n            hours = [...hours, (h-i+24)%24]\n        }\n    })\n\n</script>\n\n{#if Object.keys(tiles).length}\n{#each Array(24) as delta, i}\n<div class=\"ti\">\n    <div class=\"he\">{hours[i]}</div>\n    {#if tiles[i]}\n    {#each Object.keys(tiles[i]).sort() as cat}\n    <div class=\"ca\" style=\"width:{tiles[i][cat]}%;background-color:{$palettes[cat]};\">\n        {cat}\n    </div>\n    {/each}\n    {/if}\n</div>\n{/each}\n{/if}\n\n<style>\n    .ti {\n        display: flex;\n        text-align: center;\n        /* font-size:50%; */\n    }\n    .ca {\n        margin: 0px;\n        color: white;\n        text-align: center;\n    }\n    .he {\n        width:20%;\n        text-align: center;\n    }\n</style>\n","<script lang=\"ts\">\n    import { history } from './stores';\n    import { palettes } from './color';\n    import { statistics } from './stat'\n\n    let tiles = {}\n    history.subscribe(events => {\n        const binw = 60*24\n        const date = new Date()\n        const now = date.getTime() / 1000 / 60 // in minute\n        const oldest = now - 24*60*7\n        tiles = statistics( events, binw, oldest )\n    })\n\n    const daynames = [\"Today\", \"Yesterday\", \"2 days ago\", \"3 days ago\", \"4 days ago\", \"5 days ago\", \"6 days ago\", \"A week ago\"]\n\n</script>\n\n<div class=\"container\">\n{#if Object.keys(tiles).length}\n{#each Object.keys(tiles).sort() as day, i}\n<div class=\"ti\">\n    <div class=\"he\">{daynames[day]}</div>\n    {#each Object.keys(tiles[day]).sort() as cat}\n    <div class=\"ca\" style=\"width:{tiles[day][cat]}px;background-color:{$palettes[cat]};\">\n        {cat}\n    </div>\n    {/each}\n</div>\n{/each}\n{/if}\n</div>\n\n<style>\n    .container {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: flex-start;\n        align-items: flex-start;\n        /* overflow: auto; */\n    }\n    .ti {\n        display: flex;\n        text-align: center;\n        width: 100%;\n        /* font-size:50%; */\n    }\n    .ca {\n        margin: 0px;\n        color: white;\n        text-align: center;\n    }\n    .he {\n        width:200px;\n        text-align: center;\n    }\n</style>\n","<script lang=\"ts\">\n    import { history } from './stores';\n    import { palettes } from './color';\n\n    // 日付けごとに別のカラムにする。\n    let days = []\n\n    history.subscribe(h => {\n        days = []\n\n        let events = []\n        let today = 0\n        for(let i=0; i<h.length; i++){\n            let event = h[i]\n            let daycode = Math.floor(event[1] / (24*60) )\n            if ( today == 0 ){\n                today = daycode\n            }\n            if ( daycode != today ){\n                today = daycode\n                days = [...days, events]\n                if ( days.length >= 7 ){\n                    return\n                }\n                events = []\n            }\n            events = [...events, event]\n        }\n    })\n\n</script>\n\n<div class=\"container\">\n    {#each days as events}\n    <div class=\"list\">\n        {#each events as event, i}\n        <!-- 0 user_id, 1 endtime, 2 duration, 3 category, 4 action, 5 hours, 6 minutes-->\n        <div class=\"ev\" style=\"background-color:{$palettes[event[3]]};\" >\n            <!-- height:{event[2]}px; -->\n            {event[5]}:{event[6]} | {event[4]}\n        </div>\n        {/each}\n    </div>\n    {/each}\n</div>\n\n<style>\n    .container {\n        /* max-width: 800px; */\n        max-height: 500px;\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-start;\n        align-items: flex-start;\n        overflow: auto;\n    }\n    .list {\n        display:  flex;\n        flex-flow: column nowrap;\n        overflow: auto;\n        width:    200px;\n    }\n    .ev {\n        border: white solid 0.2px;\n        color: white;\n    }\n</style>\n","<script>\n\t// import { store } from '../hooks/auth';\n    // const logout = () =>{$store=null}\n\n\timport { token, history, cats } from '../stores';\n    const logout = () => { \n        token.set(\"\")\n        history.set([])\n        cats.set({})\n    }\n</script>\n\n<button on:click={logout}>\n    Logout\n</button>\n\n\n<style>\n    button {\n        left:120px;\n        top: 10px;\n        text-align:center;\n        color: #000;\n    }\n</style>\n","<script>\n\timport { Tabs, TabList, TabPanel, Tab } from './Components/Tabs/tabs.js';\n\timport Category from \"./Category.svelte\"\n\timport ColorSelector from \"./ColorSelector.svelte\"\n\timport Hour from \"./Hour.svelte\"\n\timport Minute from \"./Minute.svelte\"\n\timport HourStat from \"./HourStat.svelte\";\n\timport DayStat from \"./DayStat.svelte\";\n\timport EventList from \"./EventList.svelte\"\n\timport LogoutComponent from './Components/LogoutComponent.svelte';\n    import { cats, getHistory, status } from './stores.ts'\n\n\tgetHistory()\n\n\tsetInterval(() => {\n\t\tgetHistory()\n\t}, 60*1000)  // every one minute\n\n\tfunction addCategory() {\n\t\tlet c = 0\n\t\twhile ( c in $cats ){\n\t\t\tc ++\n\t\t}\n\t\t$cats[c] = {}\n\t}\n</script>\n\n<main>\n\t<LogoutComponent />\n\t<span>{$status}</span>\n\t<p>\n\t\t<Hour />時<Minute />分以降、何をしていましたか?\n\t</p>\n\t{#each Object.keys($cats) as id}\n\t<Category {id}/>\n\t{/each}\n\t<button name=\"name\" on:click={addCategory} >+ New Category</button>\n\t\n\t<Tabs>\n\t\t<TabList>\n\t\t\t<Tab>Events</Tab>\n\t\t\t<Tab>Hourly stat</Tab>\n\t\t\t<Tab>Daily stat</Tab>\n\t\t\t<Tab>Settings</Tab>\n\t\t</TabList>\n\t\n\t\t<TabPanel>\n\t\t\t<EventList />\n\t\t</TabPanel>\n\t\n\t\t<TabPanel>\n\t\t\t<HourStat />\n\t\t</TabPanel>\n\t\n\t\t<TabPanel>\n\t\t\t<DayStat />\n\t\t</TabPanel>\n\n\t\t<TabPanel>\n\t\t\t<ColorSelector />\n\t\t</TabPanel>\n\t</Tabs>\n</main>\n\n<style>\n\tp {\n\t\tmargin: 0;\n\t}\n\tspan {\n\t\tcolor: #f00;\n\t}\n</style>","<script>\n\t// import { getUserDetails } from '../hooks/auth';\n\t// import { store } from '../hooks/auth';\n    import { token, getToken } from '../stores';\n    import { get } from \"svelte/store\";\n\n\tlet username = '';\n\tlet password = '';\n\tlet error = ''\n\n\tasync function login() {\n\t\t// const user = await getUserDetails( username, password )\n\t\tlet tok;\n        getToken( username, password ).then((tok)=>{\n\t\t\tif ( tok ) {\n\t\t\t\tif ( error ) error = ''\n\t\t\t}\n\t\t\telse {\n\t\t\t\terror = 'Incorrect username and password.'\n\t\t\t\tconsole.log(\"Incorrect username and password.\")\n\t\t\t}\n\t\t})\n\t}\n\n</script>\n\n<form on:submit|preventDefault={login} class=\"flex mx-auto col-6\">\n\n\t<div class=\"mb-3\">\n\t\t<label for=\"username\" class=\"form-label\">Username</label>\n\t\t<!-- <input type=\"email\" class=\"form-control\" id=\"username\" bind:value={username} /> -->\n\t\t<input type=\"text\" class=\"form-control\" id=\"username\" bind:value={username} autocomplete=\"username\"/>\n\t</div>\n\n\t<div class=\"mb-3\">\n\t\t<label for=\"password\" class=\"form-label\">Password</label>\n\t\t<input type=\"password\" class=\"form-control\" id=\"password\" bind:value={password} />\n\t</div>\n\n\t<button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\t<div id=\"error_message\" class=\"text-danger\">\n\t\t<small>{error}</small>\n\t</div>\n\n</form>\n\n<style>\n    form {\n        max-width: 480px;\n        text-align: center;\n        padding: 1em;\n        margin: 0 auto;\n    }\n</style>","<script>\n\timport AfterLogin from './Components/AfterLogin.svelte';\n\t// import { store } from './hooks/auth';\n\timport { token } from './stores.ts';\n\timport LoginComponent from './Components/LoginComponent.svelte';\n\n</script>\n\n<svelte:head>\n\t<title>TimeAccount 2022</title>\n\t<meta name=\"robots\" content=\"noindex nofollow\" />\n\t<html lang=\"en\" />\n</svelte:head>\n\n\n{#if $token != \"\" }\n\t<AfterLogin />\n{:else }\n\t<LoginComponent />\n{/if}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["create_if_block","get","create_if_block_1"],"mappings":"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"}